plugins {
    id 'application'
    id 'com.github.johnrengelman.shadow' version '8.1.1'
}

//* =============== Java =============== *//
java { toolchain { languageVersion = JavaLanguageVersion.of(17) } }
compileJava { options.release.set(17) }

//* =============== Dependencies =============== *//
repositories { mavenCentral() }
dependencies {
    implementation 'nz.ac.waikato.cms.weka:weka-dev:3.9.6'
    implementation 'de.bwaldvogel:liblinear:2.44'
    implementation 'nz.ac.waikato.cms.weka:LibSVM:1.0.10'
    implementation files('./LibLINEAR.jar')
}

//* =============== Compiling =============== *//
sourceSets {
    main {
        java { srcDirs = ['src'] }
    }
}

application {
    mainClass = 'uk.ac.wlv.sentistrength.SentiStrength'
}

jar {
    manifest {
        attributes "Main-Class": "uk.ac.wlv.sentistrength.SentiStrength"
    }
}

shadowJar {
   archiveBaseName.set(rootProject.name)
   archiveClassifier.set('')
   archiveVersion.set(version.toString())
}

String jarPath = String.format('build/libs/%s-%s.jar', rootProject.name, version.toString())

distZip {
    dependsOn(shadowJar)
}

distTar {
    dependsOn(shadowJar)
}

startScripts {
    dependsOn(shadowJar)
}

startShadowScripts {
    dependsOn(jar)
}

tasks.register('release') {
    dependsOn(shadowJar)
    inputs.dir './build/libs'
    doFirst {
        exec {
            commandLine 'bash', '-c', 'gh repo set-default'
            commandLine 'bash', '-c',
            String.format('gh release create %s %s --generate-notes --latest --target master', version, jarPath)
        }
    }
}